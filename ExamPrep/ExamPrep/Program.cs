/*Problem 01
Напишите метод транспонирующий матрицу (зеркально отображающий относительно главной диагонали) n*m -> m*n.



Problem 02
Написать методы, переставляющие элементы в матрице double [,]:
 - по возрастанию по строкам:
  1  2  3  3
  3  6  7  8
 10 11 12 13

 - по убыванию по столбцам:
  13 10  6  3 
  12  8  3  2
  11  7  3  1



Problem 03 (MatrixTransform)
Переставьте строки в матрице double [,]
  - по возрастанию суммы чисел в строке
  - по убыванию количества отрицательных чисел в строке
  - по возрастанию наименьшего элемента в строке
  - по убыванию наибольшего элемента в строке



Problem 04 (MatrixDiagonals)
Распечатайте все "диагонали" в квадратной матрице n*n double [,] идущие паралельно главной диагонали, в порядке суммы их чисел.



Problem 05
В тексте "Война и мир - UTF-8.txt" найдите:
 - самое длинное предложение (или несколько) в отношении количества букв с учетов всех символов, включая пробелы
 - самое длинное предложение (или несколько) в отношении количества слов
 - все предложения, содержащие заданное количество символов (выведите в отсортированном по алфавиту порядке)
 - все предложения, содержащие заданное количество заданного символа (выведите в отсортированном по алфавиту порядке)

Выведите все предложения, содержащие максимальное количество повторений одной и той же БУКВЫ без учета регистра, с указанием и самой буквы, например:
Максимальное к-во: 20
а - "Предложение 1 . . ."
а - "Предложение 2 . . ."
о - "Предложение 3 . . ."
о - "Предложение 4 . . ."
о - "Предложение 5 . . ."

*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ExamPrep;
class Program {

  public static void Main(string[] args) {
    //MirrorMatrixDemo.Demo();
    //SortMatrixDemo.Demo();
    MatrixTransformDemo.Demo();
  }
}